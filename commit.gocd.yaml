format_version: 10
pipelines:
  ml_fc:
    group: latam02-ml
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      IMAGE_NAME: 'machine_learning_fc'
      TAG_VERSION: '1.0'
      DOCKER_USER: 'franco98404'
    secure_variables:
      DOCKER_PASSWORD: 'AES:YfuoN8sn0Eb5kNK9LlbxUQ==:uDzcvjKowTR0/+NKw6F01b/iC2XWAocuYjsvfj9b/q8='
      SONAR_TOKEN: AES:wS/mcdiwgIhUvkCia7ZeJA==:NQ7OhJfww/qcHLNvqhM2B4nlrAtJx/Otrn38djRqGJp9xaYV9sTdhio22aZzNxM7
    materials:
      repo:
        git: https://github.com/latam02/ml.git
        shallow_clone: false
        auto_update: true
        branch: task8_fc
    stages:
    - UnitTest:
        fetch_materials: true
        jobs:
          tester_job:
            resources:
              - ubuntu
            timeout: 0
            tasks:
            - exec:
                arguments:
                - -c
                - pip3 install -r requirements-dev-gocd.txt --no-cache-dir
                command: bash
                run_if: passed
            - exec:
                arguments:
                - -c
                - pip3 install --upgrade pip
                command: bash
                run_if: passed
            - exec:
                arguments:
                - -c
                - python3 -m pytest --html=report.html -s
                command: bash
                run_if: passed
            artifacts:
              - build:
                  source: report.html

    - codeQuality:
        fetch_materials: true
        jobs:
          coder_job:
            resources:
              - centos
            timeout: 0
            tasks:
            - exec:
                arguments:
                - -c
                - /home/sonar-scanner-4.4.0.2170-linux/bin/sonar-scanner   -Dsonar.organization=latam02mlfc   -Dsonar.projectKey=MachineLearningFC   -Dsonar.sources=.   -Dsonar.host.url=https://sonarcloud.io
                command: bash
                run_if: passed

    - Publish:
        fetch_materials: true
        jobs:
          publisher_job:
            resources:
              - docker
            timeout: 0
            tasks:
            - exec:
                arguments:
                - -c
                - docker build -t ${IMAGE_NAME}:${TAG_VERSION} .
                command: bash
                run_if: passed
            - exec:
                arguments:
                - -c
                - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
                command: bash
                run_if: passed
            - exec:
                arguments:
                - -c
                - docker tag ${IMAGE_NAME}:${TAG_VERSION} ${DOCKER_USER}/${IMAGE_NAME}:${TAG_VERSION}
                command: bash
                run_if: passed
            - exec:
                arguments:
                - -c
                - docker push ${DOCKER_USER}/${IMAGE_NAME}:${TAG_VERSION}
                command: bash
                run_if: passed
            artifacts:
              - build:
                  source: docker-compose.yml
