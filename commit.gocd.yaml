format_version: 10
pipelines:
  ml-lc:
    group: latam02-ml
    label_template: ${COUNT}
    lock_behavior: none
    display_order: -1
    environment_variables:
      IMAGE_NAME: 'ml-lc'
      TAG_VERSION: '1.4'
      DOCKER_USER: lcarrieta
    secure_variables:
      SONAR_TOKEN: AES:W6eO02eVmIqIiPPEE6c/2g==:LXZHrYVFo0oVf+5XOhU5/CLRpByPXQZRaHPM5rfY7ARRYTMKYLSUKkCzI64CiNO7
      DOCKER_PASSWORD: AES:ajqqg2pax4hFAe6FWT8qvg==:uzt9moJerSWdXe+EIDi/q1xJchvDPjsYs17Uud7++w8=
    materials:
      repo:
        git: https://github.com/latam02/ml.git
        username: lcarrietas
        shallow_clone: false
        auto_update: true
        branch: Task8_go-cd
    stages:
    - UnitTest:
        fetch_materials: true
        jobs:
          tester:
            resources:
              - ubuntu
            timeout: 0
            tasks:
            - exec:
                arguments:
                - -c
                - pip3 install -r requirements-dev-gocd.txt --no-cache-dir
                command: bash
                run_if: passed
            - exec:
                arguments:
                - -c
                - python3 -m pytest --html=report.html -s
                command: bash
                run_if: passed
            artifacts:
              - build: 
                  source: report.html

    - CodeQuality:
        fetch_materials: true
        jobs:
          code:
            resources:
              - centos
            timeout: 0
            tasks:
            - exec:
                arguments:
                - -c
                - /home/sonar-scanner-4.4.0.2170-linux/bin/sonar-scanner -Dsonar.organization=latam02-lc-ml -Dsonar.projectKey=lc-ml -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io
                command: bash
                run_if: passed
    - Package:
        fetch_materials: true
        jobs:
          packager:
            resources:
              - docker
            timeout: 0
            tasks:
            - exec:
                arguments:
                - -c
                - docker build -t ${IMAGE_NAME}:${TAG_VERSION} .
                command: bash
                run_if: passed
    - Publish:
        fetch_materials: true
        jobs:
          publisher:
            resources:
              - docker
            timeout: 0
            tasks:
            - exec:
                arguments:
                - -c
                - docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
                command: bash
                run_if: passed
            - exec:
                arguments:
                - -c
                - docker tag ${IMAGE_NAME}:${TAG_VERSION} ${DOCKER_USER}/${IMAGE_NAME}:${TAG_VERSION}
                command: bash
                run_if: passed
            - exec:
                arguments:
                - -c
                - docker push ${DOCKER_USER}/${IMAGE_NAME}:${TAG_VERSION}
                command: bash
                run_if: passed
            artifacts:
              - build: 
                  source: docker-compose.yml
              - build: 
                  source: .env.dev